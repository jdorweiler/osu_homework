2. Demonstrates understanding of binary numbers Line:  544
3. Demonstrates understanding of hexadecimal numbers Line:  547
4. Demonstrates understanding of two's complement numbers Line:  575
5. Uses some pre-defined macro from an existing include or library Line:  597
6. Uses variables in C++  Line:  528
7. Uses some form of boolean expression Line:  595
8. Uses some form of arithmetic expression Line:  567
9. Uses some form of simple output Line:  576
10. Uses some form of simple input Line:  588
12. Uses some form of conditional Line:  283
13. Uses some form of logical or bitwise operator Line:  595
14. Uses at least one loop, Line:  595
15. Uses a random number Line:  567
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  595
18. Uses at least one function that you define Line:  607
19. Generally uses functional decomposition ** kept Main() very short ** Line:  243
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  389
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  464
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  397
23. Uses at least one string variable Line:  369
24. Uses some form of recursion ** printed from recursive array function ** Line:  511
25. Uses at least one one-dimensional array Line:  418
26. Uses at least one multi-dimensional array Line:  440
27. Uses at least one statically declared array Line:  418
28. Uses at least one dynamically declared array Line:  440
29. Uses at least one command line argument ** for the file name ** Line:  279
32. Defines at least one class ** Animal Class ** Line:  335
33. Uses at least one object ** Getting type from animal object ** Line:  393
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  309
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  312
39. Uses at least one vector Line:  309
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  689
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  292

No. of Requirements Met: 38/45
2. Demonstrates understanding of binary numbers Line:  544
3. Demonstrates understanding of hexadecimal numbers Line:  547
4. Demonstrates understanding of two's complement numbers Line:  575
5. Uses some pre-defined macro from an existing include or library Line:  597
6. Uses variables in C++  Line:  528
7. Uses some form of boolean expression Line:  595
8. Uses some form of arithmetic expression Line:  567
9. Uses some form of simple output Line:  576
10. Uses some form of simple input Line:  588
12. Uses some form of conditional Line:  283
13. Uses some form of logical or bitwise operator Line:  595
14. Uses at least one loop, Line:  595
15. Uses a random number Line:  567
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  595
18. Uses at least one function that you define Line:  607
19. Generally uses functional decomposition ** kept Main() very short ** Line:  243
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  389
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  464
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  397
23. Uses at least one string variable Line:  369
24. Uses some form of recursion ** printed from recursive array function ** Line:  511
25. Uses at least one one-dimensional array Line:  418
26. Uses at least one multi-dimensional array Line:  440
27. Uses at least one statically declared array Line:  418
28. Uses at least one dynamically declared array Line:  440
29. Uses at least one command line argument ** for the file name ** Line:  279
32. Defines at least one class ** Animal Class ** Line:  335
33. Uses at least one object ** Getting type from animal object ** Line:  393
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  309
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  312
39. Uses at least one vector Line:  309
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  693
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  292

No. of Requirements Met: 38/45
2. Demonstrates understanding of binary numbers Line:  546
3. Demonstrates understanding of hexadecimal numbers Line:  549
4. Demonstrates understanding of two's complement numbers Line:  577
5. Uses some pre-defined macro from an existing include or library Line:  599
6. Uses variables in C++  Line:  530
7. Uses some form of boolean expression Line:  597
8. Uses some form of arithmetic expression Line:  569
9. Uses some form of simple output Line:  578
10. Uses some form of simple input Line:  590
12. Uses some form of conditional Line:  285
13. Uses some form of logical or bitwise operator Line:  597
14. Uses at least one loop, Line:  597
15. Uses a random number Line:  569
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  597
18. Uses at least one function that you define Line:  609
19. Generally uses functional decomposition ** kept Main() very short ** Line:  243
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  391
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  466
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  399
23. Uses at least one string variable Line:  371
24. Uses some form of recursion ** printed from recursive array function ** Line:  513
25. Uses at least one one-dimensional array Line:  420
26. Uses at least one multi-dimensional array Line:  442
27. Uses at least one statically declared array Line:  420
28. Uses at least one dynamically declared array Line:  442
29. Uses at least one command line argument ** for the file name ** Line:  281
32. Defines at least one class ** Animal Class ** Line:  337
33. Uses at least one object ** Getting type from animal object ** Line:  395
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  311
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  314
39. Uses at least one vector Line:  311
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  695
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  294

No. of Requirements Met: 38/45
Extra credit points: 12
2. Demonstrates understanding of binary numbers Line:  557
3. Demonstrates understanding of hexadecimal numbers Line:  560
4. Demonstrates understanding of two's complement numbers Line:  588
5. Uses some pre-defined macro from an existing include or library Line:  610
6. Uses variables in C++  Line:  541
7. Uses some form of boolean expression Line:  608
8. Uses some form of arithmetic expression Line:  580
9. Uses some form of simple output Line:  589
10. Uses some form of simple input Line:  601
12. Uses some form of conditional Line:  287
13. Uses some form of logical or bitwise operator Line:  608
14. Uses at least one loop, Line:  608
15. Uses a random number Line:  580
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  608
18. Uses at least one function that you define Line:  620
19. Generally uses functional decomposition ** kept Main() very short ** Line:  245
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  402
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  477
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  410
23. Uses at least one string variable Line:  382
24. Uses some form of recursion ** printed from recursive array function ** Line:  524
25. Uses at least one one-dimensional array Line:  431
26. Uses at least one multi-dimensional array Line:  453
27. Uses at least one statically declared array Line:  431
28. Uses at least one dynamically declared array Line:  453
29. Uses at least one command line argument ** for the file name ** Line:  283
32. Defines at least one class ** Animal Class ** Line:  348
33. Uses at least one object ** Getting type from animal object ** Line:  406
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  313
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  316
39. Uses at least one vector Line:  313
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  706
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  296

No. of Requirements Met: 38/45
Extra credit points: 90
2. Demonstrates understanding of binary numbers Line:  557
3. Demonstrates understanding of hexadecimal numbers Line:  560
4. Demonstrates understanding of two's complement numbers Line:  588
5. Uses some pre-defined macro from an existing include or library Line:  610
6. Uses variables in C++  Line:  541
7. Uses some form of boolean expression Line:  608
8. Uses some form of arithmetic expression Line:  580
9. Uses some form of simple output Line:  589
10. Uses some form of simple input Line:  601
12. Uses some form of conditional Line:  287
13. Uses some form of logical or bitwise operator Line:  608
14. Uses at least one loop, Line:  608
15. Uses a random number Line:  580
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  608
18. Uses at least one function that you define Line:  620
19. Generally uses functional decomposition ** kept Main() very short ** Line:  245
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  402
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  477
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  410
23. Uses at least one string variable Line:  382
24. Uses some form of recursion ** printed from recursive array function ** Line:  524
25. Uses at least one one-dimensional array Line:  431
26. Uses at least one multi-dimensional array Line:  453
27. Uses at least one statically declared array Line:  431
28. Uses at least one dynamically declared array Line:  453
29. Uses at least one command line argument ** for the file name ** Line:  283
32. Defines at least one class ** Animal Class ** Line:  348
33. Uses at least one object ** Getting type from animal object ** Line:  406
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  313
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  316
39. Uses at least one vector Line:  313
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  706
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  296

No. of Requirements Met: 38/45
Extra credit points: 0
