2. Demonstrates understanding of binary numbers Line:  573
3. Demonstrates understanding of hexadecimal numbers Line:  576
4. Demonstrates understanding of two's complement numbers Line:  604
5. Uses some pre-defined macro from an existing include or library Line:  626
6. Uses variables in C++  Line:  557
7. Uses some form of boolean expression Line:  624
8. Uses some form of arithmetic expression Line:  596
9. Uses some form of simple output Line:  605
10. Uses some form of simple input Line:  617
13. Uses some form of logical or bitwise operator Line:  624
14. Uses at least one loop, Line:  624
15. Uses a random number Line:  596
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  624
18. Uses at least one function that you define Line:  636
19. Generally uses functional decomposition ** kept Main() very short ** Line:  245
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  418
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  493
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  426
23. Uses at least one string variable Line:  398
24. Uses some form of recursion ** printed from recursive array function ** Line:  540
25. Uses at least one one-dimensional array Line:  447
26. Uses at least one multi-dimensional array Line:  469
27. Uses at least one statically declared array Line:  447
28. Uses at least one dynamically declared array Line:  469
29. Uses at least one command line argument ** for the file name ** Line:  283
32. Defines at least one class ** Animal Class ** Line:  364
33. Uses at least one object ** Getting type from animal object ** Line:  422
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  329
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  332
39. Uses at least one vector Line:  329
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  722
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  49
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  308

No. of Requirements Met: 37/45
2. Demonstrates understanding of binary numbers Line:  574
3. Demonstrates understanding of hexadecimal numbers Line:  577
4. Demonstrates understanding of two's complement numbers Line:  605
5. Uses some pre-defined macro from an existing include or library Line:  627
6. Uses variables in C++  Line:  558
7. Uses some form of boolean expression Line:  625
8. Uses some form of arithmetic expression Line:  597
9. Uses some form of simple output Line:  606
10. Uses some form of simple input Line:  618
12. Uses some form of conditional Line:  289
13. Uses some form of logical or bitwise operator Line:  625
14. Uses at least one loop, Line:  625
15. Uses a random number Line:  597
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  625
18. Uses at least one function that you define Line:  637
19. Generally uses functional decomposition ** kept Main() very short ** Line:  245
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  419
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  494
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  427
23. Uses at least one string variable Line:  399
24. Uses some form of recursion ** printed from recursive array function ** Line:  541
25. Uses at least one one-dimensional array Line:  448
26. Uses at least one multi-dimensional array Line:  470
27. Uses at least one statically declared array Line:  448
28. Uses at least one dynamically declared array Line:  470
29. Uses at least one command line argument ** for the file name ** Line:  284
32. Defines at least one class ** Animal Class ** Line:  365
33. Uses at least one object ** Getting type from animal object ** Line:  423
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  330
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  333
39. Uses at least one vector Line:  330
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  723
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  667
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  309

No. of Requirements Met: 38/45
Extra credit points: 3
2. Demonstrates understanding of binary numbers Line:  601
3. Demonstrates understanding of hexadecimal numbers Line:  604
4. Demonstrates understanding of two's complement numbers Line:  632
5. Uses some pre-defined macro from an existing include or library Line:  654
6. Uses variables in C++  Line:  585
7. Uses some form of boolean expression Line:  652
8. Uses some form of arithmetic expression Line:  624
9. Uses some form of simple output Line:  633
10. Uses some form of simple input Line:  645
12. Uses some form of conditional Line:  306
13. Uses some form of logical or bitwise operator Line:  652
14. Uses at least one loop, Line:  652
15. Uses a random number Line:  624
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  652
18. Uses at least one function that you define Line:  664
19. Generally uses functional decomposition ** kept Main() very short ** Line:  262
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  446
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  521
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  454
23. Uses at least one string variable Line:  426
24. Uses some form of recursion ** printed from recursive array function ** Line:  568
25. Uses at least one one-dimensional array Line:  475
26. Uses at least one multi-dimensional array Line:  497
27. Uses at least one statically declared array Line:  475
28. Uses at least one dynamically declared array Line:  497
29. Uses at least one command line argument ** for the file name ** Line:  301
32. Defines at least one class ** Animal Class ** Line:  391
33. Uses at least one object ** Getting type from animal object ** Line:  450
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  347
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  350
39. Uses at least one vector Line:  347
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  750
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  694
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  326

No. of Requirements Met: 38/45
Extra credit points: 12
2. Demonstrates understanding of binary numbers Line:  596
3. Demonstrates understanding of hexadecimal numbers Line:  599
4. Demonstrates understanding of two's complement numbers Line:  627
5. Uses some pre-defined macro from an existing include or library Line:  649
6. Uses variables in C++  Line:  580
7. Uses some form of boolean expression Line:  647
8. Uses some form of arithmetic expression Line:  619
9. Uses some form of simple output Line:  628
10. Uses some form of simple input Line:  640
12. Uses some form of conditional Line:  306
13. Uses some form of logical or bitwise operator Line:  647
14. Uses at least one loop, Line:  647
15. Uses a random number Line:  619
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  647
18. Uses at least one function that you define Line:  659
19. Generally uses functional decomposition ** kept Main() very short ** Line:  262
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  441
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  516
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  449
23. Uses at least one string variable Line:  421
24. Uses some form of recursion ** printed from recursive array function ** Line:  563
25. Uses at least one one-dimensional array Line:  470
26. Uses at least one multi-dimensional array Line:  492
27. Uses at least one statically declared array Line:  470
28. Uses at least one dynamically declared array Line:  492
29. Uses at least one command line argument ** for the file name ** Line:  301
32. Defines at least one class ** Animal Class ** Line:  386
33. Uses at least one object ** Getting type from animal object ** Line:  445
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  347
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  350
39. Uses at least one vector Line:  347
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  745
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  689
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  326

No. of Requirements Met: 38/45
Extra credit points: 3
