2. Demonstrates understanding of binary numbers Line:  587
3. Demonstrates understanding of hexadecimal numbers Line:  590
4. Demonstrates understanding of two's complement numbers Line:  618
5. Uses some pre-defined macro from an existing include or library Line:  640
6. Uses variables in C++  Line:  571
7. Uses some form of boolean expression Line:  638
8. Uses some form of arithmetic expression Line:  610
9. Uses some form of simple output Line:  619
10. Uses some form of simple input Line:  631
12. Uses some form of conditional Line:  287
13. Uses some form of logical or bitwise operator Line:  638
14. Uses at least one loop, Line:  638
15. Uses a random number Line:  610
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  638
18. Uses at least one function that you define Line:  650
19. Generally uses functional decomposition ** kept Main() very short ** Line:  241
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  423
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  497
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  431
23. Uses at least one string variable Line:  405
24. Uses some form of recursion ** printed from recursive array function ** Line:  544
25. Uses at least one one-dimensional array Line:  452
26. Uses at least one multi-dimensional array Line:  474
27. Uses at least one statically declared array Line:  452
28. Uses at least one dynamically declared array Line:  474
29. Uses at least one command line argument ** for the file name ** Line:  282
32. Defines at least one class ** Animal Class ** Line:  368
33. Uses at least one object ** Getting type from animal object ** Line:  427
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  329
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  332
39. Uses at least one vector Line:  329
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  736
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  680
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  308

No. of Requirements Met: 38/45
Extra credit points: 12
2. Demonstrates understanding of binary numbers Line:  587
3. Demonstrates understanding of hexadecimal numbers Line:  590
4. Demonstrates understanding of two's complement numbers Line:  618
5. Uses some pre-defined macro from an existing include or library Line:  640
6. Uses variables in C++  Line:  571
7. Uses some form of boolean expression Line:  638
8. Uses some form of arithmetic expression Line:  610
9. Uses some form of simple output Line:  619
10. Uses some form of simple input Line:  631
12. Uses some form of conditional Line:  287
13. Uses some form of logical or bitwise operator Line:  638
14. Uses at least one loop, Line:  638
15. Uses a random number Line:  610
16. Demonstrates understanding of the three general error categories ** I think I covered this through error checking the file input and user input Line:  0
17. Demonstrates some form of debugging tricks **This while loop filters bad user input ** Line:  638
18. Uses at least one function that you define Line:  650
19. Generally uses functional decomposition ** kept Main() very short ** Line:  241
20. Demonstrates how scope of variables works ** vector declared in a functions an passed around by ref Line:  423
21. Demonstrates the different ways to pass variables ** Array pointer passed by address**  Line:  497
22. Demonstrates function overloading ** this line uses overloaded ostream ** Line:  431
23. Uses at least one string variable Line:  405
24. Uses some form of recursion ** printed from recursive array function ** Line:  544
25. Uses at least one one-dimensional array Line:  452
26. Uses at least one multi-dimensional array Line:  474
27. Uses at least one statically declared array Line:  452
28. Uses at least one dynamically declared array Line:  474
29. Uses at least one command line argument ** for the file name ** Line:  282
32. Defines at least one class ** Animal Class ** Line:  368
33. Uses at least one object ** Getting type from animal object ** Line:  427
36. Attempts to use a pointer to a class ** smart pointer to animal class ** Line:  329
37. Uses its own namespace ** Animal class is in the Zoo namespace Line:  332
39. Uses at least one vector Line:  329
40. Defines classes covering the use of default constructors ** Animal subclasses use default constructors Line:  736
41. Demonstrates overloaded operators ** overloaded ostream in animal class ** Line:  49
42. Uses some form of file IO Line:  680
43. Uses other classes for some neat effects ** Used vectors, map, and shared_pointers ** Line:  0
44. Uses inheritance ** Animal sub-types inherit from the animal class ** Line:  0
45. Uses polymorphism  ** virtual ostream and getType functions for the sub classes of animal Line:  0
46. Uses exceptions Line:  308

No. of Requirements Met: 39/45
Extra credit points: 1
